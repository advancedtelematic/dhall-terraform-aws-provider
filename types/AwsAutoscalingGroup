
let AwsAutoscalingGroupOptional =
  { availability_zones : Optional (List Text)
  , default_cooldown : Optional Natural
  , desired_capacity : Optional Natural
  , enabled_metrics : Optional (List Text)
  , force_delete : Optional Bool
  , health_check_grace_period : Optional Natural
  , health_check_type : Optional Text
  , launch_configuration : Optional Text
  , load_balancers : Optional (List Text)
  , metrics_granularity : Optional Text
  , min_elb_capacity : Optional Natural
  , name : Optional Text
  , name_prefix : Optional Text
  , placement_group : Optional Text
  , protect_from_scale_in : Optional Bool
  , service_linked_role_arn : Optional Text
  , suspended_processes : Optional (List Text)
  , tags : Optional (List { key : Text, value : Text, propagate_at_launch : Bool })
  , target_group_arns : Optional (List Text)
  , termination_policies : Optional (List Text)
  , vpc_zone_identifier : Optional (List Text)
  , wait_for_capacity_timeout : Optional Text
  , wait_for_elb_capacity : Optional Natural
  , initial_lifecycle_hook : Optional (List (./AwsAutoscalingGroup.InitialLifecycleHook).InitialLifecycleHook)
  , launch_template : Optional (./AwsAutoscalingGroup.LaunchTemplate).LaunchTemplate
  , mixed_instances_policy : Optional (./AwsAutoscalingGroup.MixedInstancesPolicy).MixedInstancesPolicy
  , tag : Optional (List (./AwsAutoscalingGroup.Tag).Tag)
  }

let AwsAutoscalingGroupRequired =
  { max_size : Natural
  , min_size : Natural
  }
let AwsAutoscalingGroup = AwsAutoscalingGroupOptional //\\ AwsAutoscalingGroupRequired

in
{ AwsAutoscalingGroupOptional = AwsAutoscalingGroupOptional
, AwsAutoscalingGroupRequired = AwsAutoscalingGroupRequired
, AwsAutoscalingGroup = AwsAutoscalingGroup
}
