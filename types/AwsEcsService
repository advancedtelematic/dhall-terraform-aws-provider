
let AwsEcsServiceOptional =
  { cluster : Optional Text
  , deployment_maximum_percent : Optional Natural
  , deployment_minimum_healthy_percent : Optional Natural
  , desired_count : Optional Natural
  , enable_ecs_managed_tags : Optional Bool
  , health_check_grace_period_seconds : Optional Natural
  , iam_role : Optional Text
  , launch_type : Optional Text
  , platform_version : Optional Text
  , propagate_tags : Optional Text
  , scheduling_strategy : Optional Text
  , tags : Optional (List { mapKey : Text, mapValue : Text })
  , deployment_controller : Optional (./AwsEcsService.DeploymentController).DeploymentController
  , load_balancer : Optional (./AwsEcsService.LoadBalancer).LoadBalancer
  , network_configuration : Optional (./AwsEcsService.NetworkConfiguration).NetworkConfiguration
  , ordered_placement_strategy : Optional (List (./AwsEcsService.OrderedPlacementStrategy).OrderedPlacementStrategy)
  , placement_constraints : Optional (List (./AwsEcsService.PlacementConstraints).PlacementConstraints)
  , placement_strategy : Optional (List (./AwsEcsService.PlacementStrategy).PlacementStrategy)
  , service_registries : Optional (./AwsEcsService.ServiceRegistries).ServiceRegistries
  }

let AwsEcsServiceRequired =
  { name : Text
  , task_definition : Text
  }
let AwsEcsService = AwsEcsServiceOptional //\\ AwsEcsServiceRequired

in
{ AwsEcsServiceOptional = AwsEcsServiceOptional
, AwsEcsServiceRequired = AwsEcsServiceRequired
, AwsEcsService = AwsEcsService
}
